version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3306:3306" # Exposing MySQL port to host, can be removed if only internal access is needed
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root} # Change or set MYSQL_ROOT_PASSWORD in .env
      MYSQL_DATABASE: ${MYSQL_DATABASE:-mydatabase} # Optional: create a database on startup
      MYSQL_ROOT_HOST: '%'
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:8.13.2
    container_name: elasticsearch_db
    ports:
      - "9200:9200"
      - "9300:9300" # Transport port
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false" # Disable security for simpler lab setup, not for production
      ES_JAVA_OPTS: "-Xms512m -Xmx512m" # Adjust heap size as needed
    restart: unless-stopped

  neo4j:
    image: neo4j:5
    container_name: neo4j_db
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    environment:
      NEO4J_AUTH: ${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-yoursecurepassword} # Change or set NEO4J_USER/NEO4J_PASSWORD in .env
    restart: unless-stopped

  milvus:
    image: milvusdb/milvus:latest-standalone # Using latest stable standalone version
    container_name: milvus_db
    ports:
      - "19530:19530" # gRPC
      - "9091:9091"   # HTTP
    environment:
      ETCD_USE_EMBED: "true" # Milvus standalone uses embedded etcd
      MINIO_USE_EMBED: "true" # Milvus standalone uses embedded minio
    restart: unless-stopped

  code-server:
    image: cheesewang/tidb-lab-python-vscode:1.0
    container_name: tidb_lab_app
    ports:
      - "3000:8080"
      - "8501:8501"
      - "8502:8502"
    environment:
      SERVERLESS_CLUSTER_HOST: ${SERVERLESS_CLUSTER_HOST}
      SERVERLESS_CLUSTER_PORT: ${SERVERLESS_CLUSTER_PORT}
      SERVERLESS_CLUSTER_USERNAME: ${SERVERLESS_CLUSTER_USERNAME}
      SERVERLESS_CLUSTER_PASSWORD: ${ORIGINAL_PASSWORD} # Value from host's ORIGINAL_PASSWORD variable
      SERVERLESS_CLUSTER_DATABASE_NAME: ${SERVERLESS_CLUSTER_DATABASE_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      # Database connection details for services within docker-compose network
      MYSQL_HOST: mysql # Service name of MySQL container
      MYSQL_PORT: 3306
      ELASTICSEARCH_HOST: elasticsearch # Service name of Elasticsearch container
      ELASTICSEARCH_PORT: 9200
      NEO4J_HOST: neo4j # Service name of Neo4j container
      NEO4J_BOLT_PORT: 7687
      MILVUS_HOST: milvus # Service name of Milvus container
      MILVUS_GRPC_PORT: 19530
      MILVUS_HTTP_PORT: 9091
    volumes:
      - ./tidb-lab-ai:/root/tidb-lab-ai # Mounts local directory into the container
    depends_on:
      - mysql
      - elasticsearch
      - neo4j
      - milvus
    restart: unless-stopped